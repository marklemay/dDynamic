-- absolute minimal example for testing

data B: * {
  | t : B
  | f : B
};

-- a bool singleton
data Bs : B -> * {
  | s : (x : B) -> Bs x
};

fn : (Bs t) -> Bs t;
fn x = 
 case x < _ => Bs t > {
 | (s x) => (s x)
 };

ex1 : Bs t ;
ex1 = fn (s t) ;

ex2 : Bs t ;
ex2 = fn (s f) ;

ex3 : Bs t;
ex3 = 
 case (s f) < _ : Bs t => Bs t > {
 | (s x) => (s x)
 };

-- resonably handles this ambigous case
ex4 : Bs t;
ex4 = 
 case (s f) < _ => Bs t > {
 | (s x) => (s x)
 };

ex5 : Bs t;
ex5 = 
 case f, (s f) < b => _ : Bs b => Bs t > {
 | b => (s (f)) => (s b)
 };
