data Unit : * {
  | tt  : Unit
};

data Nat : * {
  | Z : Nat
  | S : Nat -> Nat
};



-- length indexed lists
data Vec : Nat -> * {
  | Nil  : Vec 0
  | Cons : (n : Nat) -> Vec n -> Vec (S n)
};

id' : (n : Nat) -> Vec n -> Vec n ;
id' _ vn = vn ;

id : (n : Nat) -> Vec n -> Vec n ;
id n vn = 
  case n, vn < n' => _ : Vec n' => Vec n' >{
   | (Z)   => (Nil) => Nil
   | (S _) => (Cons pn pvn) => Cons pn (id' pn pvn)
  };

s : Vec 1 ;
s = Cons 0 Nil ;

ex : Vec 1 ;
ex = id 1 s ;

