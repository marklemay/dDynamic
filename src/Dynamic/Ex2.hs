module Dynamic.Ex2 where

import AlphaShow
import Data.Map (Map)
import qualified Data.Map as Map
import Data.Set (Set)
import qualified Data.Set as Set
import Dynamic.Ast
import Dynamic.Env
import Dynamic.Helper (runC)
import Dynamic.Norm (cbvCheck)
import SourcePos
import Unbound.Generics.LocallyNameless
import UnboundHelper
import Dynamic.Erase (eraseCast, erase)

ex =
  let (u_, u_1, pn, pn1, vn, x) = (s2n "_", s2n "u_1", s2n "pn", s2n "pn1", s2n "vn", s2n "x")
   in 
     (App 
     (Csym (Csym (Csym (DConF "Cons" [C (Csym (Csym (Csym (C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) (InjTcon (Step Dummy (DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)) True (C (App (DConF "S" [] (An (Just ("Nat", TelBnd (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (bind u_ (NoBnd [])))))) (C (C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (Same (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (Same (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An (Just (TConF "Nat" [] (An (Just (NoBnd ()))))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (Same (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ())))))) 0) (bind pn (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An Nothing)) (InjTcon (Step Dummy (DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)) True (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) (C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ())))))) 0) (bind pn (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An Nothing)) (InjTcon (Step Dummy (DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)) True (C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) (C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ())))))) 0) (bind pn (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An Nothing)) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Vec", TelBnd (C (App (TConF "Vec" [] (An (Just (TelBnd (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (bind u_ (NoBnd ())))))) (C (C (Csym (Csym (Csym (C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) (InjTcon (Step Dummy (DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)) True (C (App (DConF "S" [] (An (Just ("Nat", TelBnd (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (bind u_ (NoBnd [])))))) (C (C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (Same (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (Same (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An (Just (TConF "Nat" [] (An (Just (NoBnd ()))))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (Same (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ())))))) 0) (bind pn (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An Nothing)) (InjTcon (Step Dummy (DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)) True (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) (C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ())))))) 0) (bind pn (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An Nothing)) (InjTcon (Step Dummy (DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)) True (C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) (C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ())))))) 0) (bind pn (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An Nothing)) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (Same (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An (Just TyU))) Dummy TyU (Same TyU Dummy TyU) TyU) (bind u_ (NoBnd [C (App (DConF "S" [] (An (Just ("Nat", TelBnd (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (bind u_1 (NoBnd [])))))) (C (C (Csym (Csym (Csym (C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) (InjTcon (Step Dummy (DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)) True (C (App (DConF "S" [] (An (Just ("Nat", TelBnd (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (bind u_1 (NoBnd [])))))) (C (C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (Same (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (Same (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An (Just (TConF "Nat" [] (An (Just (NoBnd ()))))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (Same (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ())))))) 0) (bind pn (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An Nothing)) (InjTcon (Step Dummy (DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)) True (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) (C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ())))))) 0) (bind pn (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An Nothing)) (InjTcon (Step Dummy (DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)) True (C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) (C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ())))))) 0) (bind pn (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An Nothing)) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (Same (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An (Just (TConF "Nat" [] (An (Just (NoBnd ()))))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (Same (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)])))))) (InjTcon (Step Dummy (DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)) True (C (DConF "S" [C (C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ())))))) 0) (bind pn (Pi (C (App (TConF "Vec" [] (An (Just (TelBnd (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (bind u_ (NoBnd ())))))) (C (C (Csym (V pn (An (Just (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)))) (InjDcon (InjTcon (Trans (Trans (Trans Refl (Step Dummy (TConF "Vec" [DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)] (An Nothing)) True (TConF "Vec" [C (App (DConF "S" [] (An (Just ("Nat", TelBnd (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (bind u_ (NoBnd [])))))) (C (C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (Same (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (Same (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An (Just (TConF "Nat" [] (An (Just (NoBnd ()))))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (Same (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)] (An (Just (NoBnd ())))) (TConF "Vec" [C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))))) (Step Dummy (TConF "Vec" [DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)] (An Nothing)) True (TConF "Vec" [C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))) (TConF "Vec" [C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))))) (Step Dummy (TConF "Vec" [DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)] (An Nothing)) True (TConF "Vec" [C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))) (TConF "Vec" [C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))))) 0) 0) (bind pn1 (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An (Just (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (Same (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (Same (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An (Just TyU))) Dummy TyU (Same TyU Dummy TyU) TyU) (bind u_ (TConF "Vec" [C (App (DConF "S" [] (An (Just ("Nat", TelBnd (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (bind u_1 (NoBnd [])))))) (C (C (Csym (V pn (An (Just (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)))) (InjDcon (InjTcon (Trans (Trans (Trans Refl (Step Dummy (TConF "Vec" [DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)] (An Nothing)) True (TConF "Vec" [C (App (DConF "S" [] (An (Just ("Nat", TelBnd (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (bind u_1 (NoBnd [])))))) (C (C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (Same (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (Same (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An (Just (TConF "Nat" [] (An (Just (NoBnd ()))))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (Same (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)] (An (Just (NoBnd ())))) (TConF "Vec" [C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))))) (Step Dummy (TConF "Vec" [DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)] (An Nothing)) True (TConF "Vec" [C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))) (TConF "Vec" [C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))))) (Step Dummy (TConF "Vec" [DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)] (An Nothing)) True (TConF "Vec" [C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))) (TConF "Vec" [C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))))) 0) 0) (bind pn1 (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An (Just (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (Same (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (Same (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An (Just (TConF "Nat" [] (An (Just (NoBnd ()))))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (Same (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)] (An (Just (NoBnd ()))))))) (An Nothing)) (InjTcon (Step Dummy (DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)) True (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) (C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ())))))) 0) (bind pn (Pi (C (App (TConF "Vec" [] (An (Just (TelBnd (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (bind u_ (NoBnd ())))))) (C (C (Csym (V pn (An (Just (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)))) (InjDcon (InjTcon (Trans (Trans (Trans Refl (Step Dummy (TConF "Vec" [DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)] (An Nothing)) True (TConF "Vec" [C (App (DConF "S" [] (An (Just ("Nat", TelBnd (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (bind u_ (NoBnd [])))))) (C (C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (Same (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (Same (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An (Just (TConF "Nat" [] (An (Just (NoBnd ()))))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (Same (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)] (An (Just (NoBnd ())))) (TConF "Vec" [C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))))) (Step Dummy (TConF "Vec" [DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)] (An Nothing)) True (TConF "Vec" [C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))) (TConF "Vec" [C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))))) (Step Dummy (TConF "Vec" [DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)] (An Nothing)) True (TConF "Vec" [C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))) (TConF "Vec" [C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))))) 0) 0) (bind pn1 (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An (Just (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (Same (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (Same (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An (Just TyU))) Dummy TyU (Same TyU Dummy TyU) TyU) (bind u_ (TConF "Vec" [C (App (DConF "S" [] (An (Just ("Nat", TelBnd (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (bind u_1 (NoBnd [])))))) (C (C (Csym (V pn (An (Just (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)))) (InjDcon (InjTcon (Trans (Trans (Trans Refl (Step Dummy (TConF "Vec" [DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)] (An Nothing)) True (TConF "Vec" [C (App (DConF "S" [] (An (Just ("Nat", TelBnd (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (bind u_1 (NoBnd [])))))) (C (C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (Same (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (Same (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An (Just (TConF "Nat" [] (An (Just (NoBnd ()))))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (Same (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)] (An (Just (NoBnd ())))) (TConF "Vec" [C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))))) (Step Dummy (TConF "Vec" [DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)] (An Nothing)) True (TConF "Vec" [C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))) (TConF "Vec" [C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))))) (Step Dummy (TConF "Vec" [DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)] (An Nothing)) True (TConF "Vec" [C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))) (TConF "Vec" [C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))))) 0) 0) (bind pn1 (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An (Just (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (Same (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (Same (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An (Just (TConF "Nat" [] (An (Just (NoBnd ()))))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (Same (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)] (An (Just (NoBnd ()))))))) (An Nothing)) (InjTcon (Step Dummy (DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)) True (C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) (C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ())))))) 0) (bind pn (Pi (C (App (TConF "Vec" [] (An (Just (TelBnd (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (bind u_ (NoBnd ())))))) (C (C (Csym (V pn (An (Just (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)))) (InjDcon (InjTcon (Trans (Trans (Trans Refl (Step Dummy (TConF "Vec" [DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)] (An Nothing)) True (TConF "Vec" [C (App (DConF "S" [] (An (Just ("Nat", TelBnd (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (bind u_ (NoBnd [])))))) (C (C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (Same (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (Same (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An (Just (TConF "Nat" [] (An (Just (NoBnd ()))))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (Same (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)] (An (Just (NoBnd ())))) (TConF "Vec" [C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))))) (Step Dummy (TConF "Vec" [DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)] (An Nothing)) True (TConF "Vec" [C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))) (TConF "Vec" [C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))))) (Step Dummy (TConF "Vec" [DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)] (An Nothing)) True (TConF "Vec" [C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))) (TConF "Vec" [C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))))) 0) 0) (bind pn1 (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An (Just (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (Same (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (Same (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An (Just TyU))) Dummy TyU (Same TyU Dummy TyU) TyU) (bind u_ (TConF "Vec" [C (App (DConF "S" [] (An (Just ("Nat", TelBnd (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (bind u_1 (NoBnd [])))))) (C (C (Csym (V pn (An (Just (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)))) (InjDcon (InjTcon (Trans (Trans (Trans Refl (Step Dummy (TConF "Vec" [DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)] (An Nothing)) True (TConF "Vec" [C (App (DConF "S" [] (An (Just ("Nat", TelBnd (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (bind u_1 (NoBnd [])))))) (C (C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (Same (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (Same (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An (Just (TConF "Nat" [] (An (Just (NoBnd ()))))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (Same (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)] (An (Just (NoBnd ())))) (TConF "Vec" [C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))))) (Step Dummy (TConF "Vec" [DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)] (An Nothing)) True (TConF "Vec" [C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))) (TConF "Vec" [C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))))) (Step Dummy (TConF "Vec" [DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)] (An Nothing)) True (TConF "Vec" [C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))) (TConF "Vec" [C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))))) 0) 0) (bind pn1 (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An (Just (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (Same (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (Same (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An (Just (TConF "Nat" [] (An (Just (NoBnd ()))))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (Same (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)] (An (Just (NoBnd ()))))))) (An Nothing)) (C (Csym (Csym (Csym (App (Csym (Csym (Csym (Fun (bind (u_, vn) (C (V vn (An (Just (C (App (TConF "Vec" [] (An (Just (TelBnd (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (bind u_1 (NoBnd ())))))) (C (C (Csym (Csym (Csym (C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) (InjTcon (Step Dummy (DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)) True (C (App (DConF "S" [] (An (Just ("Nat", TelBnd (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (bind u_1 (NoBnd [])))))) (C (C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (Same (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (Same (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An (Just (TConF "Nat" [] (An (Just (NoBnd ()))))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (Same (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ())))))) 0) (bind pn (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An Nothing)) (InjTcon (Step Dummy (DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)) True (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) (C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ())))))) 0) (bind pn (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An Nothing)) (InjTcon (Step Dummy (DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)) True (C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) (C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ())))))) 0) (bind pn (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An Nothing)) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (Same (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An (Just TyU))) Dummy TyU (Same TyU Dummy TyU) TyU)))) Dummy (C (App (TConF "Vec" [] (An (Just (TelBnd (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (bind u_1 (NoBnd ())))))) (C (C (Csym (Csym (Csym (C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) (InjTcon (Step Dummy (DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)) True (C (App (DConF "S" [] (An (Just ("Nat", TelBnd (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (bind u_1 (NoBnd [])))))) (C (C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (Same (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (Same (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An (Just (TConF "Nat" [] (An (Just (NoBnd ()))))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (Same (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ())))))) 0) (bind pn (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An Nothing)) (InjTcon (Step Dummy (DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)) True (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) (C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ())))))) 0) (bind pn (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An Nothing)) (InjTcon (Step Dummy (DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)) True (C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) (C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ())))))) 0) (bind pn (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An Nothing)) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (Same (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An (Just TyU))) Dummy TyU (Same TyU Dummy TyU) TyU) (Same (C (App (TConF "Vec" [] (An (Just (TelBnd (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (bind u_1 (NoBnd ())))))) (C (C (Csym (Csym (Csym (C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) (InjTcon (Step Dummy (DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)) True (C (App (DConF "S" [] (An (Just ("Nat", TelBnd (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (bind u_1 (NoBnd [])))))) (C (C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (Same (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (Same (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An (Just (TConF "Nat" [] (An (Just (NoBnd ()))))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (Same (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ())))))) 0) (bind pn (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An Nothing)) (InjTcon (Step Dummy (DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)) True (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) (C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ())))))) 0) (bind pn (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An Nothing)) (InjTcon (Step Dummy (DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)) True (C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) (C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ())))))) 0) (bind pn (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An Nothing)) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (Same (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An (Just TyU))) Dummy TyU (Same TyU Dummy TyU) TyU) Dummy (C (App (TConF "Vec" [] (An (Just (TelBnd (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (bind u_1 (NoBnd ())))))) (C (C (Csym (Csym (Csym (C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) (InjTcon (Step Dummy (DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)) True (C (App (DConF "S" [] (An (Just ("Nat", TelBnd (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (bind u_1 (NoBnd [])))))) (C (C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (Same (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (Same (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An (Just (TConF "Nat" [] (An (Just (NoBnd ()))))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (Same (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ())))))) 0) (bind pn (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An Nothing)) (InjTcon (Step Dummy (DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)) True (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) (C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ())))))) 0) (bind pn (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An Nothing)) (InjTcon (Step Dummy (DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)) True (C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) (C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ())))))) 0) (bind pn (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An Nothing)) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (Same (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An (Just TyU))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (App (TConF "Vec" [] (An (Just (TelBnd (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (bind u_1 (NoBnd ())))))) (C (C (Csym (Csym (Csym (C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) (InjTcon (Step Dummy (DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)) True (C (App (DConF "S" [] (An (Just ("Nat", TelBnd (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (bind u_1 (NoBnd [])))))) (C (C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (Same (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (Same (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An (Just (TConF "Nat" [] (An (Just (NoBnd ()))))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (Same (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ())))))) 0) (bind pn (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An Nothing)) (InjTcon (Step Dummy (DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)) True (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) (C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ())))))) 0) (bind pn (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An Nothing)) (InjTcon (Step Dummy (DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)) True (C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) (C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ())))))) 0) (bind pn (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An Nothing)) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (Same (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An (Just TyU))) Dummy TyU (Same TyU Dummy TyU) TyU))) (An (Just (C (App (TConF "Vec" [] (An (Just (TelBnd (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (bind u_ (NoBnd ())))))) (C (C (Csym (Csym (Csym (C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) (InjTcon (Step Dummy (DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)) True (C (App (DConF "S" [] (An (Just ("Nat", TelBnd (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (bind u_ (NoBnd [])))))) (C (C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (Same (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (Same (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An (Just (TConF "Nat" [] (An (Just (NoBnd ()))))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (Same (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ())))))) 0) (bind pn (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An Nothing)) (InjTcon (Step Dummy (DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)) True (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) (C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ())))))) 0) (bind pn (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An Nothing)) (InjTcon (Step Dummy (DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)) True (C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) (C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ())))))) 0) (bind pn (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An Nothing)) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (Same (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An (Just TyU))) Dummy TyU (Same TyU Dummy TyU) TyU, bind u_ (C (App (TConF "Vec" [] (An (Just (TelBnd (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (bind u_1 (NoBnd ())))))) (C (C (Csym (Csym (Csym (C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) (InjTcon (Step Dummy (DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)) True (C (App (DConF "S" [] (An (Just ("Nat", TelBnd (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (bind u_1 (NoBnd [])))))) (C (C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (Same (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (Same (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An (Just (TConF "Nat" [] (An (Just (NoBnd ()))))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (Same (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ())))))) 0) (bind pn (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An Nothing)) (InjTcon (Step Dummy (DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)) True (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) (C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ())))))) 0) (bind pn (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An Nothing)) (InjTcon (Step Dummy (DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)) True (C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) (C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ())))))) 0) (bind pn (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An Nothing)) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (Same (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An (Just TyU))) Dummy TyU (Same TyU Dummy TyU) TyU))))) (InjTcon (Step Dummy (DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)) True (C (DConF "S" [C (C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ())))))) 0) (bind pn (C (Pi (C (App (TConF "Vec" [] (An (Just (TelBnd (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (bind u_ (NoBnd ())))))) (C (C (Csym (V pn (An (Just (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)))) (InjDcon (InjTcon (Trans (Trans (Trans Refl (Step Dummy (TConF "Vec" [DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)] (An Nothing)) True (TConF "Vec" [C (App (DConF "S" [] (An (Just ("Nat", TelBnd (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (bind u_ (NoBnd [])))))) (C (C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (Same (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (Same (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An (Just (TConF "Nat" [] (An (Just (NoBnd ()))))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (Same (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)] (An (Just (NoBnd ())))) (TConF "Vec" [C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))))) (Step Dummy (TConF "Vec" [DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)] (An Nothing)) True (TConF "Vec" [C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))) (TConF "Vec" [C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))))) (Step Dummy (TConF "Vec" [DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)] (An Nothing)) True (TConF "Vec" [C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))) (TConF "Vec" [C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))))) 0) 0) (bind pn1 (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An (Just (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (Same (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (Same (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An (Just TyU))) Dummy TyU (Same TyU Dummy TyU) TyU) (bind u_ (C (App (TConF "Vec" [] (An (Just (TelBnd (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (bind u_1 (NoBnd ())))))) (C (C (Csym (V pn (An (Just (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)))) (InjDcon (InjTcon (Trans (Trans (Trans Refl (Step Dummy (TConF "Vec" [DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)] (An Nothing)) True (TConF "Vec" [C (App (DConF "S" [] (An (Just ("Nat", TelBnd (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (bind u_1 (NoBnd [])))))) (C (C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (Same (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (Same (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An (Just (TConF "Nat" [] (An (Just (NoBnd ()))))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (Same (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)] (An (Just (NoBnd ())))) (TConF "Vec" [C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))))) (Step Dummy (TConF "Vec" [DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)] (An Nothing)) True (TConF "Vec" [C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))) (TConF "Vec" [C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))))) (Step Dummy (TConF "Vec" [DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)] (An Nothing)) True (TConF "Vec" [C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))) (TConF "Vec" [C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))))) 0) 0) (bind pn1 (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An (Just (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (Same (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (Same (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An (Just TyU))) Dummy TyU (Same TyU Dummy TyU) TyU))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An Nothing)) (InjTcon (Step Dummy (DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)) True (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) (C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ())))))) 0) (bind pn (C (Pi (C (App (TConF "Vec" [] (An (Just (TelBnd (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (bind u_ (NoBnd ())))))) (C (C (Csym (V pn (An (Just (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)))) (InjDcon (InjTcon (Trans (Trans (Trans Refl (Step Dummy (TConF "Vec" [DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)] (An Nothing)) True (TConF "Vec" [C (App (DConF "S" [] (An (Just ("Nat", TelBnd (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (bind u_ (NoBnd [])))))) (C (C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (Same (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (Same (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An (Just (TConF "Nat" [] (An (Just (NoBnd ()))))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (Same (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)] (An (Just (NoBnd ())))) (TConF "Vec" [C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))))) (Step Dummy (TConF "Vec" [DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)] (An Nothing)) True (TConF "Vec" [C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))) (TConF "Vec" [C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))))) (Step Dummy (TConF "Vec" [DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)] (An Nothing)) True (TConF "Vec" [C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))) (TConF "Vec" [C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))))) 0) 0) (bind pn1 (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An (Just (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (Same (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (Same (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An (Just TyU))) Dummy TyU (Same TyU Dummy TyU) TyU) (bind u_ (C (App (TConF "Vec" [] (An (Just (TelBnd (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (bind u_1 (NoBnd ())))))) (C (C (Csym (V pn (An (Just (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)))) (InjDcon (InjTcon (Trans (Trans (Trans Refl (Step Dummy (TConF "Vec" [DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)] (An Nothing)) True (TConF "Vec" [C (App (DConF "S" [] (An (Just ("Nat", TelBnd (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (bind u_1 (NoBnd [])))))) (C (C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (Same (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (Same (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An (Just (TConF "Nat" [] (An (Just (NoBnd ()))))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (Same (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)] (An (Just (NoBnd ())))) (TConF "Vec" [C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))))) (Step Dummy (TConF "Vec" [DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)] (An Nothing)) True (TConF "Vec" [C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))) (TConF "Vec" [C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))))) (Step Dummy (TConF "Vec" [DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)] (An Nothing)) True (TConF "Vec" [C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))) (TConF "Vec" [C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))))) 0) 0) (bind pn1 (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An (Just (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (Same (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (Same (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An (Just TyU))) Dummy TyU (Same TyU Dummy TyU) TyU))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An Nothing)) (InjTcon (Step Dummy (DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)) True (C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) (C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ())))))) 0) (bind pn (C (Pi (C (App (TConF "Vec" [] (An (Just (TelBnd (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (bind u_ (NoBnd ())))))) (C (C (Csym (V pn (An (Just (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)))) (InjDcon (InjTcon (Trans (Trans (Trans Refl (Step Dummy (TConF "Vec" [DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)] (An Nothing)) True (TConF "Vec" [C (App (DConF "S" [] (An (Just ("Nat", TelBnd (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (bind u_ (NoBnd [])))))) (C (C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (Same (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (Same (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An (Just (TConF "Nat" [] (An (Just (NoBnd ()))))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (Same (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)] (An (Just (NoBnd ())))) (TConF "Vec" [C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))))) (Step Dummy (TConF "Vec" [DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)] (An Nothing)) True (TConF "Vec" [C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))) (TConF "Vec" [C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))))) (Step Dummy (TConF "Vec" [DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)] (An Nothing)) True (TConF "Vec" [C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))) (TConF "Vec" [C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))))) 0) 0) (bind pn1 (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An (Just (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (Same (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (Same (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An (Just TyU))) Dummy TyU (Same TyU Dummy TyU) TyU) (bind u_ (C (App (TConF "Vec" [] (An (Just (TelBnd (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (bind u_1 (NoBnd ())))))) (C (C (Csym (V pn (An (Just (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)))) (InjDcon (InjTcon (Trans (Trans (Trans Refl (Step Dummy (TConF "Vec" [DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)] (An Nothing)) True (TConF "Vec" [C (App (DConF "S" [] (An (Just ("Nat", TelBnd (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (bind u_1 (NoBnd [])))))) (C (C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (Same (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (Same (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An (Just (TConF "Nat" [] (An (Just (NoBnd ()))))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (Same (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)] (An (Just (NoBnd ())))) (TConF "Vec" [C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))))) (Step Dummy (TConF "Vec" [DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)] (An Nothing)) True (TConF "Vec" [C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))) (TConF "Vec" [C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))))) (Step Dummy (TConF "Vec" [DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)] (An Nothing)) True (TConF "Vec" [C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))) (TConF "Vec" [C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))))) 0) 0) (bind pn1 (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An (Just (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (Same (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (Same (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An (Just TyU))) Dummy TyU (Same TyU Dummy TyU) TyU))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An Nothing)) (C (Csym (Csym (Csym (C (DConF "Nil" [] (An (Just ("Vec", NoBnd [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (Same (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)])))) Dummy (TConF "Vec" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (Same (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)] (An (Just (NoBnd ())))) (TConF "Vec" [DConF "Z" [] (An Nothing)] (An Nothing)) (TConF "Vec" [C (C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ()))))) (InjTcon (Step Dummy (DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)) True (C (App (DConF "S" [] (An (Just ("Nat", TelBnd (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (bind u_ (NoBnd [])))))) (C (C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (Same (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (Same (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An (Just (TConF "Nat" [] (An (Just (NoBnd ()))))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (Same (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ())))))) 0) (bind pn (C (App (TConF "Vec" [] (An (Just (TelBnd (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (bind u_ (NoBnd ())))))) (C (V pn (An (Just (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (Same (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An (Just TyU))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An Nothing)) (InjTcon (Step Dummy (DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)) True (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) (C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ())))))) 0) (bind pn (C (App (TConF "Vec" [] (An (Just (TelBnd (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (bind u_ (NoBnd ())))))) (C (V pn (An (Just (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (Same (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An (Just TyU))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An Nothing)) (InjTcon (Step Dummy (DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)) True (C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) (C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ())))))) 0) (bind pn (C (App (TConF "Vec" [] (An (Just (TelBnd (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (bind u_ (NoBnd ())))))) (C (V pn (An (Just (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (Same (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An (Just TyU))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An Nothing)) Dummy (TConF "Vec" [C (C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))) (TConF "Vec" [DConF "Z" [] (An Nothing)] (An Nothing)) (TConF "Vec" [C (C (Csym (Csym (Csym (C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) (InjTcon (Step Dummy (DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)) True (C (App (DConF "S" [] (An (Just ("Nat", TelBnd (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (bind u_ (NoBnd [])))))) (C (C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (Same (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (Same (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An (Just (TConF "Nat" [] (An (Just (NoBnd ()))))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (Same (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ())))))) 0) (bind pn (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An Nothing)) (InjTcon (Step Dummy (DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)) True (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) (C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ())))))) 0) (bind pn (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An Nothing)) (InjTcon (Step Dummy (DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)) True (C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) (C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ())))))) 0) (bind pn (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An Nothing)) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ()))))) (An (Just (C (App (TConF "Vec" [] (An (Just (TelBnd (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (bind u_ (NoBnd ())))))) (C (C (Csym (C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) (InjDcon (InjTcon (Trans (Trans (Trans Refl (Step Dummy (TConF "Vec" [DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)] (An Nothing)) True (TConF "Vec" [C (App (DConF "S" [] (An (Just ("Nat", TelBnd (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (bind u_ (NoBnd [])))))) (C (C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (Same (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (Same (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An (Just (TConF "Nat" [] (An (Just (NoBnd ()))))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (Same (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)] (An (Just (NoBnd ())))) (TConF "Vec" [C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))))) (Step Dummy (TConF "Vec" [DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)] (An Nothing)) True (TConF "Vec" [C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))) (TConF "Vec" [C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))))) (Step Dummy (TConF "Vec" [DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)] (An Nothing)) True (TConF "Vec" [C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))) (TConF "Vec" [C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))))) 0) 0) (bind pn (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An (Just (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (Same (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (Same (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An (Just TyU))) Dummy TyU (Same TyU Dummy TyU) TyU)))) (InjTcon (Step Dummy (DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)) True (C (App (DConF "S" [] (An (Just ("Nat", TelBnd (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (bind u_ (NoBnd [])))))) (C (C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (Same (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (Same (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An (Just (TConF "Nat" [] (An (Just (NoBnd ()))))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (Same (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ())))))) 0) (bind pn (C (App (TConF "Vec" [] (An (Just (TelBnd (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (bind u_ (NoBnd ())))))) (C (C (Csym (C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) (InjDcon (InjTcon (Trans (Trans (Trans Refl (Step Dummy (TConF "Vec" [DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)] (An Nothing)) True (TConF "Vec" [C (App (DConF "S" [] (An (Just ("Nat", TelBnd (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (bind u_ (NoBnd [])))))) (C (C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (Same (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (Same (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An (Just (TConF "Nat" [] (An (Just (NoBnd ()))))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (Same (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)] (An (Just (NoBnd ())))) (TConF "Vec" [C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))))) (Step Dummy (TConF "Vec" [DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)] (An Nothing)) True (TConF "Vec" [C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))) (TConF "Vec" [C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))))) (Step Dummy (TConF "Vec" [DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)] (An Nothing)) True (TConF "Vec" [C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))) (TConF "Vec" [C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))))) 0) 0) (bind pn1 (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An (Just (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (Same (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (Same (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An (Just TyU))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An Nothing)) (InjTcon (Step Dummy (DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)) True (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) (C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ())))))) 0) (bind pn (C (App (TConF "Vec" [] (An (Just (TelBnd (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (bind u_ (NoBnd ())))))) (C (C (Csym (C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) (InjDcon (InjTcon (Trans (Trans (Trans Refl (Step Dummy (TConF "Vec" [DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)] (An Nothing)) True (TConF "Vec" [C (App (DConF "S" [] (An (Just ("Nat", TelBnd (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (bind u_ (NoBnd [])))))) (C (C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (Same (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (Same (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An (Just (TConF "Nat" [] (An (Just (NoBnd ()))))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (Same (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)] (An (Just (NoBnd ())))) (TConF "Vec" [C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))))) (Step Dummy (TConF "Vec" [DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)] (An Nothing)) True (TConF "Vec" [C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))) (TConF "Vec" [C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))))) (Step Dummy (TConF "Vec" [DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)] (An Nothing)) True (TConF "Vec" [C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))) (TConF "Vec" [C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))))) 0) 0) (bind pn1 (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An (Just (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (Same (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (Same (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An (Just TyU))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An Nothing)) (InjTcon (Step Dummy (DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)) True (C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) (C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ())))))) 0) (bind pn (C (App (TConF "Vec" [] (An (Just (TelBnd (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (bind u_ (NoBnd ())))))) (C (C (Csym (C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) (InjDcon (InjTcon (Trans (Trans (Trans Refl (Step Dummy (TConF "Vec" [DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)] (An Nothing)) True (TConF "Vec" [C (App (DConF "S" [] (An (Just ("Nat", TelBnd (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (bind u_ (NoBnd [])))))) (C (C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (Same (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (Same (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An (Just (TConF "Nat" [] (An (Just (NoBnd ()))))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (Same (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)] (An (Just (NoBnd ())))) (TConF "Vec" [C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))))) (Step Dummy (TConF "Vec" [DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)] (An Nothing)) True (TConF "Vec" [C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))) (TConF "Vec" [C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))))) (Step Dummy (TConF "Vec" [DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)] (An Nothing)) True (TConF "Vec" [C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))) (TConF "Vec" [C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))))) 0) 0) (bind pn1 (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An (Just (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (Same (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (Same (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An (Just TyU))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An Nothing)) Dummy (TConF "Vec" [C (C (Csym (Csym (Csym (C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) (InjTcon (Step Dummy (DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)) True (C (App (DConF "S" [] (An (Just ("Nat", TelBnd (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (bind u_ (NoBnd [])))))) (C (C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (Same (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (Same (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An (Just (TConF "Nat" [] (An (Just (NoBnd ()))))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (Same (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ())))))) 0) (bind pn (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An Nothing)) (InjTcon (Step Dummy (DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)) True (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) (C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ())))))) 0) (bind pn (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An Nothing)) (InjTcon (Step Dummy (DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)) True (C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) (C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ())))))) 0) (bind pn (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An Nothing)) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))) (TConF "Vec" [DConF "Z" [] (An Nothing)] (An Nothing)) (TConF "Vec" [C (C (Csym (Csym (Csym (C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) (InjTcon (Step Dummy (DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)) True (C (App (DConF "S" [] (An (Just ("Nat", TelBnd (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (bind u_ (NoBnd [])))))) (C (C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (Same (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (Same (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An (Just (TConF "Nat" [] (An (Just (NoBnd ()))))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (Same (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ())))))) 0) (bind pn (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An Nothing)) (InjTcon (Step Dummy (DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)) True (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) (C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ())))))) 0) (bind pn (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An Nothing)) (InjTcon (Step Dummy (DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)) True (C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) (C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ())))))) 0) (bind pn (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An Nothing)) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ()))))) (An (Just (TConF "Vec" [C (App (DConF "S" [] (An (Just ("Nat", TelBnd (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (bind u_ (NoBnd [])))))) (C (C (Csym (C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) (InjDcon (InjTcon (Trans (Trans (Trans Refl (Step Dummy (TConF "Vec" [DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)] (An Nothing)) True (TConF "Vec" [C (App (DConF "S" [] (An (Just ("Nat", TelBnd (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (bind u_ (NoBnd [])))))) (C (C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (Same (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (Same (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An (Just (TConF "Nat" [] (An (Just (NoBnd ()))))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (Same (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)] (An (Just (NoBnd ())))) (TConF "Vec" [C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))))) (Step Dummy (TConF "Vec" [DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)] (An Nothing)) True (TConF "Vec" [C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))) (TConF "Vec" [C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))))) (Step Dummy (TConF "Vec" [DConF "S" [DConF "Z" [] (An Nothing)] (An Nothing)] (An Nothing)) True (TConF "Vec" [C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))) (TConF "Vec" [C (C (DConF "S" [C (DConF "Z" [] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just ("Nat", NoBnd [])))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (TConF "Nat" [] (An Nothing)) (TConF "Nat" [] (An (Just (NoBnd ()))))] (An (Just (NoBnd ())))))) 0) 0) (bind pn (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An (Just (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (Same (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) (Same (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (An (Just (TConF "Nat" [] (An (Just (NoBnd ()))))))) Dummy (TConF "Nat" [] (An (Just (NoBnd ())))) (Same (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)) (C (TConF "Nat" [] (An (Just (NoBnd ())))) Dummy TyU (Same TyU Dummy TyU) TyU)] (An (Just (NoBnd ())))))))
     

exr = runC (do
  e <- cbvCheck ex
  erase e
  ) emptyModule Nothing